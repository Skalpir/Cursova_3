controllers/: Этот каталог содержит контроллеры, которые обрабатывают входящие запросы от маршрутов и взаимодействуют с сервисами для выполнения бизнес-логики. Например, userController.js может содержать методы для обработки запросов, связанных с пользователем (регистрация, вход и т. д.).
models/: В этом каталоге расположены модели данных, которые описывают структуру вашей базы данных. Например, User.js может содержать схему MongoDB для пользователя.
routes/: Здесь находятся файлы маршрутов, которые определяют маршруты API вашего приложения. Каждый маршрут будет указывать на соответствующий контроллер. Например, userRoutes.js может содержать маршруты, связанные с пользователем.
services/: Этот каталог содержит сервисы, которые обрабатывают бизнес-логику вашего приложения. Они могут взаимодействовать с моделями и выполнять операции над данными. Например, userService.js может содержать методы для работы с пользователями (создание, получение, обновление, удаление).
app.js: Это главный файл вашего приложения, где вы настраиваете и запускаете ваш сервер. Здесь вы можете подключить фреймворк (например, Express.js), настроить маршруты и обработчики ошибок, а также подключиться к базе данных.

Схемы для монгодб
Пациенты (Patients):
Имя
Фамилия
Дата рождения
Пол
Контактная информация
Медицинская история
...
Врачи (Doctors):
Имя
Фамилия
Специализация
График работы
Контактная информация
...
Приемы (Appointments):
Дата и время приема
Пациент
Врач
Статус приема (назначен, подтвержден, отменен и т. д.)
...
Отчеты о приемах (Appointment Reports):
Результаты осмотра
Назначения (лекарства, процедуры и т. д.)
Рекомендации
Диагноз
...
Медицинские процедуры (Medical Procedures):
Название процедуры
Описание
Длительность
Стоимость
...
Отделения (Departments):
Название отделения
Описание
Врачи, работающие в отделении
Пациенты, находящиеся на лечении
...
Рецепты (Prescriptions):
Назначенное лекарство
Дозировка
Продолжительность приема
Врач, выписавший рецепт
Пациент, для которого выписан рецепт
...

ёёё

Сначала регестрация аккаунта, потом уже заполнения формы пациента, ведь тогда известен юзер(паспорт) и можно его присвоить перед отправку в бд что бы потом дсотавать
запросом его из бд

ёёё

Маршруты пациентов:
Создание нового пациента
Получение списка всех пациентов
Получение информации о конкретном пациенте
Обновление информации о пациенте
Удаление пациента
Маршруты врачей:
Создание нового врача
Получение списка всех врачей
Получение информации о конкретном враче
Обновление информации о враче
Удаление врача
Маршруты приемов:
Создание нового приема
Получение списка всех приемов
Получение информации о конкретном приеме
Обновление информации о приеме
Отмена приема
Маршруты отчетов о приемах:
Создание нового отчета о приеме
Получение списка всех отчетов о приемах
Получение информации о конкретном отчете о приеме
Обновление информации о отчете о приеме
Удаление отчета о приеме
Маршруты медицинских процедур:
Создание новой медицинской процедуры
Получение списка всех медицинских процедур
Получение информации о конкретной медицинской процедуре
Обновление информации о медицинской процедуре
Удаление медицинской процедуры
Маршруты отделений:
Создание нового отделения
Получение списка всех отделений
Получение информации о конкретном отделении
Обновление информации о отделении
Удаление отделения
Маршруты рецептов:
Создание нового рецепта
Получение списка всех рецептов
Получение информации о конкретном рецепте
Обновление информации о рецепте
Удаление рецепта
Маршруты аутентификации и авторизации:
Регистрация нового пользователя
Вход в систему (аутентификация)
Выход из системы
Обновление информации о пользователе
Удаление учетной записи



{
"nickname": "user",
"firstName": "Ivanov",
"lastName": "Ivan",
"dateOfBirth": "2024-05-06",
"gender": "male",
"contactInfo": "+3805421456",
"medicalHistory": 
{
"pastIllnesses": ["none"],
"surgeries": ["none"],
"medications": ["tablet 1", "tablet2"],
"allergies": ["preparat1","preparat2"]
}

}